// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  firstName    String
  lastName     String
  password     String
  title        String         @default("")
  phone        String         @default("+25000000000")
  profileImage String?
  confirmed    Boolean?       @default(false)
  Facility     Facility[]
  Contribution Contribution[]
  userType     String?        @default("member")
}

model Facility {
  id                    Int            @id @default(autoincrement())
  facilityName          String         @unique
  facilityCategory      String
  province              String
  tinNumber             String         @unique
  district              String
  sector                String
  cell                  String
  plotNumber            String
  user                  User           @relation(fields: [userId], references: [id])
  userId                Int
  documents             String[]
  membershipCertificate String         @default("")
  Contribution          Contribution[]
  status                String         @default("pending")
  joinedAt              DateTime       @default(now())
  defaultContribution   Int            @default(0)
  contributionChecked   Boolean        @default(false)
  createdAt             DateTime       @default(now())
}

model passwordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Announcement {
  id               Int      @id @unique @default(autoincrement())
  subject          String   @unique
  announcementbody String
  createdAt        DateTime @default(now())
}

model Contribution {
  id                      Int      @id @unique @default(autoincrement())
  contributionAmount      Int
  depositRecieptNumber    String   @unique
  depositReciept          String[]
  status                  String   @default("pending")
  userId                  Int
  user                    User     @relation(fields: [userId], references: [id])
  facility                Facility @relation(fields: [facilityId], references: [id])
  facilityId              Int
  contributionPeriod      Int      @default(1)
  YearOfContributionStart DateTime @default(now())
  createdAt               DateTime @default(now())
  unpaidContribution      Int      @default(0)
}

model ContributingYearsMonitor{
  id                      Int      @id @unique @default(autoincrement())
  year                    Int
  initialized             Boolean @default(false)
}